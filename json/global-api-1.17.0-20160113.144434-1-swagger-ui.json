{
  "swagger" : "2.0",
  "info" : {
    "description" : "api installed on esb nodes",
    "version" : "v1",
    "title" : "global-api",
    "contact" : {
      "name" : "Gianni Giglio",
      "email" : "gig@melexis.com"
    }
  },
  "host" : "esb-test.colo",
  "basePath" : "/cxf/spc",
  "tags" : [ {
    "name" : "spccontrol",
    "description" : "Global Settings API"
  }, {
    "name" : "spcjournal",
    "description" : "Global Journal Api"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/spc/control/actionTypes" : {
      "get" : {
        "tags" : [ "spccontrol" ],
        "summary" : "Get all action types",
        "description" : "",
        "operationId" : "getAllActionTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ActionType"
              }
            }
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "An internal error occured"
          }
        }
      }
    },
    "/spc/control/add" : {
      "post" : {
        "tags" : [ "spccontrol" ],
        "summary" : "Add SPC Setting",
        "description" : "",
        "operationId" : "addSpcControl",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "spcSetting",
          "description" : "ControlVO in json format",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Control"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The SPC setting was successfuly added"
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "An internal error occured"
          }
        }
      }
    },
    "/spc/control/all" : {
      "get" : {
        "tags" : [ "spccontrol" ],
        "summary" : "Get all spc settings",
        "description" : "",
        "operationId" : "getAllControls",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "enabled",
          "in" : "query",
          "description" : "retrieve enabled settings only",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Control"
              }
            }
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "An internal error occured"
          }
        }
      }
    },
    "/spc/control/blockActions" : {
      "get" : {
        "tags" : [ "spccontrol" ],
        "summary" : "Get all mail block actions",
        "description" : "",
        "operationId" : "getAllBlockActions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/BlockActionType"
              }
            }
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "An internal error occured"
          }
        }
      }
    },
    "/spc/control/controlTypes" : {
      "get" : {
        "tags" : [ "spccontrol" ],
        "summary" : "Get all control types",
        "description" : "",
        "operationId" : "getAllControlTypes",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ControlType"
              }
            }
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "An internal error occured"
          }
        }
      }
    },
    "/spc/control/update" : {
      "post" : {
        "tags" : [ "spccontrol" ],
        "summary" : "Update an existing SPC setting",
        "description" : "",
        "operationId" : "updateSpcControl",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "spcSetting",
          "description" : "ControlVO in json format",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Control"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The SPC setting was successfuly updated"
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "An internal error occured"
          }
        }
      }
    },
    "/spc/control/wecoRules" : {
      "get" : {
        "tags" : [ "spccontrol" ],
        "summary" : "Get all weco rules",
        "description" : "",
        "operationId" : "getAllWecoRules",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "The request was successful",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WecoRule"
              }
            }
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "An internal error occured"
          }
        }
      }
    },
    "/spc/journal/selection" : {
      "post" : {
        "tags" : [ "spcjournal" ],
        "summary" : "Get Journal entries",
        "description" : "",
        "operationId" : "getJournalEntries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "requestBody",
          "description" : "SelectorRequestVO in json format",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SelectorRequestVO"
          }
        }, {
          "name" : "site",
          "in" : "query",
          "description" : "Comma seperated sites",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of journal entries",
            "schema" : {
              "$ref" : "#/definitions/ResponseWrapper"
            }
          },
          "204" : {
            "description" : "No journal entries where found for this request"
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "Data retrieval services are not available"
          }
        }
      }
    },
    "/spc/journal/{jobId}/{opSeq}/{opCode}" : {
      "get" : {
        "tags" : [ "spcjournal" ],
        "summary" : "Get failed spc's",
        "description" : "Get List of journalEntries for spc's that have failed",
        "operationId" : "getFailedJournals",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "job identifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "operation sequence",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "operation code",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful retrieval of journal entries",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/SpcJournalEntry"
              }
            }
          },
          "204" : {
            "description" : "No journal entries where found for this jobId, opSeq and opCode combination"
          },
          "400" : {
            "description" : "The request body is incorrect"
          },
          "500" : {
            "description" : "Data retrieval services are not available"
          }
        }
      }
    }
  },
  "definitions" : {
    "ActionType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "BlockAction" : {
      "type" : "object",
      "required" : [ "blockActionType" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "$ref" : "#/definitions/ActionType"
        },
        "comment" : {
          "type" : "string"
        },
        "blockActionType" : {
          "description" : "The type of lot block action",
          "$ref" : "#/definitions/BlockActionType"
        }
      }
    },
    "BlockActionType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "Control" : {
      "type" : "object",
      "required" : [ "comment", "controlType", "id", "manualLCL", "manualTarget", "manualUCL", "name", "predicate", "spcLevel", "trigram", "useManual", "wecoRule" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "position" : 1
        },
        "name" : {
          "type" : "string",
          "position" : 2
        },
        "predicate" : {
          "type" : "string",
          "position" : 3
        },
        "controlType" : {
          "position" : 4,
          "$ref" : "#/definitions/ControlType"
        },
        "controlParam" : {
          "type" : "string",
          "position" : 5
        },
        "calcLCL" : {
          "type" : "number",
          "format" : "double",
          "position" : 6,
          "description" : "Calculated lower control limit"
        },
        "calcTarget" : {
          "type" : "number",
          "format" : "double",
          "position" : 7,
          "description" : "Calculated target"
        },
        "calcUCL" : {
          "type" : "number",
          "format" : "double",
          "position" : 8,
          "description" : "Calculated upper control limit"
        },
        "manualLCL" : {
          "type" : "number",
          "format" : "double",
          "position" : 9,
          "description" : "Manual lower control limit"
        },
        "manualTarget" : {
          "type" : "number",
          "format" : "double",
          "position" : 10,
          "description" : "Manual target"
        },
        "manualUCL" : {
          "type" : "number",
          "format" : "double",
          "position" : 11,
          "description" : "Manual upper control limit"
        },
        "useManual" : {
          "type" : "boolean",
          "position" : 12,
          "description" : "Use manual limits as boolean",
          "default" : false
        },
        "wecoRule" : {
          "position" : 13,
          "$ref" : "#/definitions/WecoRule"
        },
        "mailActions" : {
          "type" : "array",
          "position" : 14,
          "description" : "List of mail actions",
          "items" : {
            "$ref" : "#/definitions/MailAction"
          }
        },
        "blockActions" : {
          "type" : "array",
          "position" : 15,
          "description" : "List of lot block actions",
          "items" : {
            "$ref" : "#/definitions/BlockAction"
          }
        },
        "trigram" : {
          "type" : "string",
          "position" : 16,
          "description" : "User trigram"
        },
        "comment" : {
          "type" : "string",
          "position" : 17,
          "description" : "User comment"
        },
        "active" : {
          "type" : "boolean",
          "position" : 18,
          "description" : "Activate SPC setting as boolean",
          "default" : false
        },
        "timestamp" : {
          "type" : "string",
          "format" : "date-time",
          "position" : 19,
          "description" : "SPC setting creation as timestamp with timezone"
        },
        "originalId" : {
          "type" : "integer",
          "format" : "int32",
          "position" : 20
        },
        "enabled" : {
          "type" : "boolean",
          "position" : 21,
          "default" : false
        },
        "spcLevel" : {
          "type" : "string",
          "position" : 22,
          "enum" : [ "WAFER", "LOT" ]
        }
      }
    },
    "ControlType" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    },
    "ExceptionWrapper" : {
      "type" : "object",
      "required" : [ "cause", "message" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "position" : 1,
          "description" : "Exception message"
        },
        "cause" : {
          "type" : "string",
          "position" : 2,
          "description" : "Exception cause"
        }
      }
    },
    "MailAction" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "type" : {
          "$ref" : "#/definitions/ActionType"
        },
        "comment" : {
          "type" : "string"
        },
        "content" : {
          "type" : "string"
        }
      }
    },
    "ResponseWrapper" : {
      "type" : "object",
      "required" : [ "resultsPerSite" ],
      "properties" : {
        "resultsPerSite" : {
          "type" : "object",
          "position" : 1,
          "description" : "results mapped per site",
          "additionalProperties" : {
            "$ref" : "#/definitions/SiteResponse"
          }
        }
      }
    },
    "SelectorRequestVO" : {
      "type" : "object",
      "properties" : {
        "dateFrom" : {
          "type" : "string"
        },
        "dateTill" : {
          "type" : "string"
        },
        "products" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "steps" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "lots" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wafers" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "facilities" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "machines" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "lotSearch" : {
          "type" : "string"
        }
      }
    },
    "SiteResponse" : {
      "type" : "object",
      "required" : [ "statusCode" ],
      "properties" : {
        "statusCode" : {
          "type" : "string",
          "position" : 1,
          "description" : "The returned HTTP code"
        },
        "exception" : {
          "position" : 2,
          "description" : "The wrapper of thrown exceptions",
          "$ref" : "#/definitions/ExceptionWrapper"
        },
        "data" : {
          "type" : "string",
          "position" : 3,
          "description" : "The data in json format"
        }
      }
    },
    "SpcJournalEntry" : {
      "type" : "object",
      "required" : [ "createdTime", "id", "lotId", "opCode", "opSeq", "product", "result", "setupTime", "spcSettingId", "spcSettingName", "step", "updatedTime", "value", "waferId" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "position" : 1
        },
        "lotId" : {
          "type" : "string",
          "position" : 2,
          "description" : "Job/Lot name"
        },
        "waferId" : {
          "type" : "integer",
          "format" : "int32",
          "position" : 3,
          "description" : "Sublot/Wafer name"
        },
        "spcSettingId" : {
          "type" : "integer",
          "format" : "int32",
          "position" : 4,
          "description" : "Id of executed spc setting"
        },
        "spcSettingName" : {
          "type" : "string",
          "position" : 5,
          "description" : "Name of exectued spc setting"
        },
        "product" : {
          "type" : "string",
          "position" : 6,
          "description" : "Product name"
        },
        "step" : {
          "type" : "string",
          "position" : 7,
          "description" : "Step name"
        },
        "result" : {
          "type" : "boolean",
          "position" : 8,
          "description" : "Result value as boolean",
          "default" : false
        },
        "value" : {
          "type" : "number",
          "format" : "double",
          "position" : 9,
          "description" : "Calculated value as double"
        },
        "erpChecked" : {
          "type" : "boolean",
          "position" : 10,
          "description" : "Verification if erp is checked as boolean",
          "default" : false
        },
        "opSeq" : {
          "type" : "string",
          "position" : 11,
          "description" : "Operation sequence"
        },
        "opCode" : {
          "type" : "string",
          "position" : 12,
          "description" : "Operation code"
        },
        "setupTime" : {
          "type" : "string",
          "format" : "date-time",
          "position" : 13,
          "description" : "Setup time as timestamp with timezone"
        },
        "createdTime" : {
          "type" : "string",
          "format" : "date-time",
          "position" : 14,
          "description" : "Journal entry creation as timestamp with timezone"
        },
        "updatedTime" : {
          "type" : "string",
          "format" : "date-time",
          "position" : 15,
          "description" : "Last updated time as timestamp with timezone"
        },
        "reason" : {
          "type" : "string",
          "position" : 16,
          "description" : "Reason for failure"
        },
        "blockActionTypes" : {
          "type" : "string",
          "position" : 17,
          "description" : "Lot block action type by spc setting for this journal"
        }
      }
    },
    "WecoRule" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string"
        }
      }
    }
  }
}